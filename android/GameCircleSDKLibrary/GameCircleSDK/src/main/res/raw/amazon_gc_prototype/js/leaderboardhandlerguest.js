/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
LeaderboardHandlerGuest=(function(){var a=function(i,d){var f="LeaderboardRequest";var j=i;var e=d;var h=new ScoreFormatter();this["getHandledType"]=function(){return f};this["handleRequest"]=function(n){var s=$.Deferred();if(!(n instanceof Request)){console.log("LeaderboardHandlerGuest: handleRequest: input was not of type Request");var v=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});s.resolve(v)}else{console.log("LeaderboardHandlerGuest: handleRequest: message is: "+JSON.stringify(n.getType()));var o=n.getType();var r=n.getParams();var p=r.action;var m={};switch(p){case"getLeaderboardsForGame":var q=r.cacheOnly;if(q){promise=e.getLeaderboards("SELF",r.gameId);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: cached getLeaderboards promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)})}else{promise=j.getLeaderboardsForGame(r.gameId);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: getLeaderboardsForGame promise: "+JSON.stringify(w));if(x!=constants.NativeCallResultCode.SUCCESS){console.log("LeaderboardHandlerGuest: getLeaderboardsForGame promise: SERVICE RESULT NOT OK");promise=e.getLeaderboards("SELF",r.gameId);promise.done(function(B,C){console.log("LeaderboardHandlerGuest: cached getLeaderboards promise: "+JSON.stringify(B));var D=C;var E=B;var B=new Result(D,E);s.resolve(B)})}else{var z=constants.NativeCallResultCode.SUCCESS;var A=w;var y=e.deleteLeaderboards("SELF",r.gameId);y.done(function(B){var C=e.cacheLeaderboards("SELF",r.gameId,A);C.done(function(E){console.log("UPDATED LEADERBOARDS CACHE cacheLeaderboards");var D=A.LeaderboardList;var G=[];$.each(D,function(J,H){var I=H.LeaderboardInfo;G.push(I)});var F=e.cacheLeaderboardInfoItems(r.gameId,G)})});var w=A;w.serviceResult=true;w=new Result(z,w);s.resolve(w)}})}break;case"getHighScore":var q=r.cacheOnly;if(q){promise=e.getLocalPlayerScore("SELF",r.gameId,r.leaderboardId,r.scope);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: cached getLocalPlayerScore promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)})}else{promise=j.getHighScore(r.gameId,r.leaderboardId,r.scope);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: getHighScore promise: "+JSON.stringify(w));var A=x==constants.NativeCallResultCode.SUCCESS&&g(w);if(!A){console.log("LeaderboardHandlerGuest: getHighScore promise: SERVICE RESULT NOT OK");promise=e.getLocalPlayerScore("SELF",r.gameId,r.leaderboardId,r.scope);promise.done(function(C,D){console.log("LeaderboardHandlerGuest: cached getLocalPlayerScore promise: "+JSON.stringify(C));var E=D;var F=C;var C=new Result(E,F);s.resolve(C)})}else{var z=constants.NativeCallResultCode.SUCCESS;var B=w;var w=new Result(z,B);var y=e.cacheLocalPlayerScore("SELF",r.gameId,r.leaderboardId,r.scope,B);y.done(function(C){console.log("UPDATED LEADERBOARDS CACHE")});s.resolve(w)}})}break;case"getHighestScoreSubmissions":e.getHighestScoreSubmissions("SELF").always(function(w,x){console.log("LeaderboardHandlerGuest: cached getHighestScoreSubmissions promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)});break;case"getLeaderboardRanks":var q=r.cacheOnly;if(q){promise=e.getScores("SELF",r.gameId,r.leaderboardId,r.scope,r.startRank,r.numRanks,false);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: cached getScores promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)})}else{promise=j.getLeaderboardRanks(r.gameId,r.leaderboardId,r.scope,r.startRank,r.numRanks);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: getLeaderboardRanks promise: "+JSON.stringify(w));var A=x==constants.NativeCallResultCode.SUCCESS&&g(w);if(!A){console.log("LeaderboardHandlerGuest: getLeaderboardRanks promise: SERVICE RESULT NOT OK");promise=e.getScores("SELF",r.gameId,r.leaderboardId,r.scope,r.startRank,r.numRanks,false);promise.done(function(C,D){console.log("LeaderboardHandlerGuest: cached getScores promise: "+JSON.stringify(C));hostinterface.logMessage("LeaderboardHandlerGuest: getScores result came back: "+JSON.stringify(C));var E=D;var F=C;var C=new Result(E,F);s.resolve(C)})}else{var z=constants.NativeCallResultCode.SUCCESS;var B=w;var w=new Result(z,B);var y=e.cacheScoresForGame("SELF",r.gameId,r.leaderboardId,r.scope,r.startRank,r.numRanks,false,B);y.done(function(C){console.log("UPDATED LEADERBOARDS CACHE")});s.resolve(w)}})}break;case"getLeaderboardPercentiles":var q=r.cacheOnly;if(q){promise=e.getPercentiles("SELF",r.gameId,r.leaderboardId,r.scope);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: cached getPercentiles promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)})}else{promise=j.getLeaderboardPercentiles("SELF",r.gameId,r.leaderboardId,r.scope);promise.done(function(w,x){console.log("LeaderboardHandlerGuest: getLeaderboardPercentiles promise: "+JSON.stringify(w));var A=x==constants.NativeCallResultCode.SUCCESS&&g(w);if(!A){console.log("LeaderboardHandlerGuest: getLeaderboardPercentiles promise: SERVICE RESULT NOT OK");promise=e.getPercentiles("SELF",r.gameId,r.leaderboardId,r.scope);promise.done(function(C,D){console.log("LeaderboardHandlerGuest: cached getPercentiles promise: "+JSON.stringify(C));var E=D;var F=C;var C=new Result(E,F);s.resolve(C)})}else{var z=constants.NativeCallResultCode.SUCCESS;var B=w;var w=new Result(z,B);var y=e.cachePercentiles("SELF",r.gameId,r.leaderboardId,r.scope,B);y.done(function(C){console.log("UPDATED LEADERBOARDS CACHE")});s.resolve(w)}})}break;case"submitScore":var u=false;var t;var l=$.Deferred();var k=$.Deferred();j.getLeaderboardsForGame(r.gameId).always(function(w,x){var y=x==constants.NativeCallResultCode.SUCCESS&&g(w);if(y){var z=w;e.deleteLeaderboards("SELF",r.gameId).always(function(A){e.cacheLeaderboards("SELF",r.gameId,z).always(function(C){var B=z.LeaderboardList;var E=[];$.each(B,function(H,F){var G=F.LeaderboardInfo;E.push(G)});var D=e.cacheLeaderboardInfoItems(r.gameId,E).always(function(F){k.resolve()})})})}else{k.resolve()}});$.when(k).always(function(){e.getHighestScoreSubmission("SELF",r.gameId,r.leaderboardId).always(function(x,w){if(w!=constants.NativeCallResultCode.SUCCESS){u=true}e.getLeaderboardInfo(r.gameId,r.leaderboardId).always(function(A,y){t=A;if(w==constants.NativeCallResultCode.SUCCESS&&y==constants.NativeCallResultCode.SUCCESS&&A&&A.LeaderboardInfo){var z=A.LeaderboardInfo["SortOrder"];if(z=="DESCENDING"){if(r.PlayerScore>x){u=true}}else{if(r.PlayerScore<x){u=true}}}l.resolve()});$.when(l).always(function(){console.log("LeaderboardHandlerGuest: submitScore promise: "+JSON.stringify(v));var B={};var z={};z.type="leaderboardEvent";z.leaderboardId=r.leaderboardId;z.PlayerScore=r.PlayerScore;z.gameId=r.gameId;z.eventTime=new Date().getTime();B.eventJson=z;console.log("LeaderboardHandlerGuest: submitScore queueing event: "+JSON.stringify(z));NativeTransport.callNative({nativeCall:constants.NativeCallTypes.QUEUE_OFFLINE_EVENT,args:B});e.updateCachedScoreSubmission("SELF",r.gameId,r.leaderboardId,r.PlayerScore).always(function(F,G){if(G==constants.NativeCallResultCode.SUCCESS){c(r.leaderboardId)}console.log("LeaderboardHandlerRecognized: submitScore updateCachedScoreSubmission completed")});var y=t;if(u&&y&&y.LeaderboardInfo&&y.LeaderboardInfo["Name"]){var D=y.LeaderboardInfo["Name"];var E=r.PlayerScore;var C=y.LeaderboardInfo["DisplayText"];var A=y.LeaderboardInfo["IconUrl"];b().always(function(G){var F;if(G){F=ServiceFactory.getToastFactory().createKindleLeaderboardToastGuestRequest(D,E,C,A);hostinterface.showToast(JSON.stringify(F))}else{F=ServiceFactory.getToastFactory().createLeaderboardToastGuestRequest(D,E,C,A);hostinterface.showToast(JSON.stringify(F))}})}s.resolve({},constants.NativeCallResultCode.SUCCESS)})})});break;case"clearCache":e.clear().always(function(w,x){console.log("LeaderboardHandlerGuest: clearCache promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);s.resolve(w)});break;default:console.log("LeaderboardHandlerGuest: handleRequest: actionCode not supported: "+p);var v=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});s.resolve(v)}}console.log("LeaderboardHandlerGuest: handleRequest: end of call");return s.promise()};var b=function(){var k=$.Deferred();ServiceFactory.getGCSettings().isKindle().always(function(l){k.resolve(l)});return k};function g(k){return(k!==undefined&&k!==null&&k.ResultCodes!==undefined&&k.ResultCodes!==null&&k.ResultCodes.errorCode==="OK"&&k.ResultCodes.resultCode==="OK")}function c(k){var l=new GameCircleEvent("PostLeaderboardInfo");l.addAttribute(constants.MetricConstants.MetricStringValueAttributesKeys_TARGET_ID,k);l.close()}};return a}());console.log("LeaderboardHandlerGuest loaded.");