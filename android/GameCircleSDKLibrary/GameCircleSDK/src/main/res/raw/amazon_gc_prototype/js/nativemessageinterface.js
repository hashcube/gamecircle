/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
function handleMessage(d){console.log("staging: handleMessage called: nativeRequestData: "+JSON.stringify(d));var a=ServiceFactory.getRequestFactory().createAPIRequest(d);var c=ServiceFactory.getRequestRouter().handleRequest(a);if(c!=undefined){c.always(function(e){console.log("staging: handleMessage: callback called");var f={};var g=constants.ServiceResponseCode.SERVICE_REQUEST_FAILURE;if(e instanceof Result){if(e.getType()==constants.NativeCallResultCode.SUCCESS){g=constants.ServiceResponseCode.SERVICE_REQUEST_SUCCESS}else{if(e.getType()==constants.NativeCallResultCode.NETWORK_ERROR){g=constants.ServiceResponseCode.RESPONSE_ERROR_NETWORK}else{if(e.getType()==constants.NativeCallResultCode.AUTHORIZATION_ERROR){g=constants.ServiceResponseCode.RESPONSE_ERROR_UNAUTHORIZED}else{g=constants.ServiceResponseCode.RESPONSE_ERROR_UNRECOVERABLE}}}f=$.extend({},f,e.getResultMap())}f[constants.BindingKeys.REQUEST_ID_KEY]=d[constants.BindingKeys.REQUEST_ID_KEY];f[constants.ServiceResponseCode.RESPONSE_CODE_KEY]=g;console.log("staging: Would have ended with: "+JSON.stringify(f));hostinterface.sendReply(JSON.stringify(f))})}else{console.log("staging: handleMessage: promise was undefined");var b={};b[constants.BindingKeys.REQUEST_ID_KEY]=d[constants.BindingKeys.REQUEST_ID_KEY];b[constants.ServiceResponseCode.RESPONSE_CODE_KEY]=constants.ServiceResponseCode.SERVICE_REQUEST_FAILURE;console.log("staging: Would have ended with no promise and return of: "+JSON.stringify(b));hostinterface.sendReply(JSON.stringify(b))}}hostinterface.setReadyForMessages();console.log("nativemessageinterface loaded.");