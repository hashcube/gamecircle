/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
OfflineEventHandler=(function(){var a=function(c,f){var d="OfflineEventRequest";var e=c;var b=f;this["getHandledType"]=function(){return d};this["handleRequest"]=function(k){var p=$.Deferred();if(!(k instanceof Request)){console.log("OfflineEventHandler: handleRequest: input was not of type Request");var s=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});p.resolve(s)}else{console.log("OfflineEventHandler: handleRequest: message is: "+JSON.stringify(k.getType()));var l=k.getType();var o=k.getParams();var n=o.action;var j={};switch(n){case"processOfflineEvent":var r=o.event;var m=r;if(m.type=="leaderboardEvent"){var i=m.PlayerScore;var h=m.leaderboardId;var q=m.gameId;b.submitScore(q,h,i).always(function(t,u){console.log("OfflineEventHandler: submitScore promise: "+JSON.stringify(t)+" resultCode: "+u);if(u!=constants.NativeCallResultCode.SUCCESS){var v=u;var w=t;var t=new Result(v,w);p.resolve(t)}else{var v=constants.NativeCallResultCode.SUCCESS;var w=t;var t=new Result(v,w);p.resolve(t)}})}else{var g=Math.min(m.progress,100);e.updateAchievementProgress(m.achievementId,g).always(function(t,u){console.log("OfflineEventHandler: updateAchievementProgress promise: "+JSON.stringify(t)+" resultCode: "+u);if(u!=constants.NativeCallResultCode.SUCCESS){var v=u;var w=t;var t=new Result(v,w);p.resolve(t)}else{var v=constants.NativeCallResultCode.SUCCESS;var w=t;var t=new Result(v,w);p.resolve(t)}})}break;default:console.log("OfflineEventHandler: handleRequest: actionCode not supported: "+n);var s=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});p.resolve(s)}}console.log("OfflineEventHandler: handleRequest: end of call");return p.promise()}};return a}());console.log("OfflineEventHandler loaded.");