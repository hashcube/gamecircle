/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
ProfileServiceProxy=(function(){var a=function(){var b="https://cortana-gateway.amazon.com/cortana/gateway/profile/";this["getProfile"]=function(){return NativeTransport.serviceCall({target:"ProfilesService",method:"getDefaultProfile",httpMethod:"GET",endPoint:b})};this["getTOSAccepted"]=function(){var c=$.Deferred();var d=NativeTransport.serviceCall({target:"ProfilesService",method:"getDefaultProfile",httpMethod:"GET",endPoint:b,allowCallInGuestMode:true});d.always(function(f,e){if(f&&f.termsOfServiceAccepted!=null){c.resolve(f.termsOfServiceAccepted)}else{c.resolve(null)}});return c.promise()};this["acceptTOS"]=function(){return NativeTransport.serviceCall({target:"ProfilesService",method:"update",httpMethod:"POST",endPoint:b,allowCallInGuestMode:true,args:{termsofservice:true}})};this["getCORSupported"]=function(){return NativeTransport.serviceCall({target:"ProfilesService",method:"isplayercountrysupported",httpMethod:"GET",endPoint:b,allowCallInGuestMode:true})};this["setCOR"]=function(d){var c={cor:d};return NativeTransport.serviceCall({target:"ProfilesService",method:"setcountryofresidence",httpMethod:"POST",endPoint:b,allowCallInGuestMode:true,args:c})};this["updateProfile"]=function(d){var c={alias:d.alias,avatarLocation:d.avatarId,termsofservice:d.termsOfServiceAccepted};return NativeTransport.serviceCall({target:"ProfilesService",method:"update",httpMethod:"POST",endPoint:b,args:c})};this["updateProfileHidden"]=function(d){var c={hidden:d};return NativeTransport.serviceCall({target:"ProfilesService",method:"hideprofile",httpMethod:"POST",endPoint:b,args:c})};this["getAvatars"]=function(){var c=$.Deferred();var d=NativeTransport.serviceCall({target:"ProfilesService",method:"getavatars",httpMethod:"GET",endPoint:b});d.always(function(j,f){var h=[];if(j&&j.avatars&&j.avatarsMap){var l={};for(var k in j.avatarsMap){l[j.avatarsMap[k]]=k}for(var g=0;g<j.avatars.length;g++){var e=j.avatars[g];var k=l[e];h.push({avatarId:k,avatarUrl:e})}}c.resolve(h,f)});return c.promise()}};return a}());console.log("ProfileServiceProxy loaded.");