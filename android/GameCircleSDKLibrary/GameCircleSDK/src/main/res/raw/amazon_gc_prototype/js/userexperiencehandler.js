/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
UserExperienceHandler=(function(){var a=function(g,e){var d="UserExperienceRequest";var f=g;var b=e;var c=this;this["getHandledType"]=function(){return d};this["handleRequest"]=function(i){var p=$.Deferred();if(!(i instanceof Request)){console.log("UserExperienceHandler: handleRequest: input was not of type Request");var q=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});p.resolve(q)}else{console.log("UserExperienceHandler: handleRequest: message is: "+JSON.stringify(i.getType()));var k=i.getType();var o=i.getParams();var l=o.action;var h={};switch(l){case"getTimePlayedXPCheckpoints":c.getPackageName().done(function(s){var r=$.Deferred();promise=f.getTimePlayedXPCheckpoints(s);promise.done(r.resolve);if(o.timeout>0){n=setTimeout(function(){hostinterface.logMessage("UserExperienceHandler: getTimePlayedXPCheckpoints timed out");r.resolve({},constants.NativeCallResultCode.NETWORK_ERROR);n=0},o.timeout)}r.always(function(t,u){if(n){clearTimeout(n)}if(u!=constants.NativeCallResultCode.SUCCESS){console.log("UserExperieceHandler: getTimePlayedXPCheckpoints promise: SERVICE RESULT NOT OK");p.resolve({})}else{p.resolve(new Result(constants.NativeCallResultCode.SUCCESS,t))}})});break;case"getMyFriendProfiles":var m=$.Deferred();var j=o.playerIds;f.getMyFriendProfiles(j).always(function(r,s){m.resolve(r,s)});var n=undefined;if(o.timeout>0){n=setTimeout(function(){hostinterface.logMessage("UserExperienceHandler: getMyFriendProfiles timed out");m.resolve({},constants.NativeCallResultCode.NETWORK_ERROR);n=0},o.timeout)}m.always(function(r,s){if(n){clearTimeout(n)}if(s!=constants.NativeCallResultCode.SUCCESS){console.log("UserExperieceHandler: getMyFriendProfiles promise: SERVICE RESULT NOT OK");p.resolve(new Result(constants.NativeCallResultCode.ERROR,r))}else{p.resolve(new Result(constants.NativeCallResultCode.SUCCESS,r))}});break;default:console.log("UserExperienceHandler: handleRequest: actionCode not supported: "+l);var q=new Result(constants.NativeCallResultCode.REQUEST_FAILURE,{});p.resolve(q)}}console.log("UserExperienceHandler: handleRequest: end of call");return p.promise()};this["getPackageName"]=function(){var h=$.Deferred();NativeTransport.callNative({nativeCall:constants.NativeCallTypes.GET_PACKAGE_NAME}).always(function(i){if(i!=null){var j=i[constants.BindingKeys.PACKAGE_NAME_KEY];if(j!=null&&j!=""){h.resolve(j);return}}h.reject()});return h.promise()}};return a}());console.log("UserExperienceHandler loaded.");