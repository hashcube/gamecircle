/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
var nativehost={};nativehost.postMessage=function(a,b){var c={};c[constants.NativeCallKeys.NATIVE_CALL]=a.nativeCall;c[constants.NativeCallKeys.TARGET]=a.target;c[constants.NativeCallKeys.HTTP_METHOD]=a.httpMethod;c[constants.NativeCallKeys.HTTP_HEADERS]=a.httpHeaders;c[constants.NativeCallKeys.HTTP_PAYLOAD]=a.httpPayload;c[constants.NativeCallKeys.END_POINT]=a.endPoint;c[constants.NativeCallKeys.METHOD]=a.method;c[constants.NativeCallKeys.PARAMETERS]=a.parameters;c[constants.NativeCallKeys.REQUEST_ID]=b;c[constants.NativeCallKeys.AUTHENTICATE]=a[constants.NativeCallKeys.AUTHENTICATE];hostinterface.handleMessage(JSON.stringify(c))};NativeTransport=(function(){var c=0;var b={};var d=null;var a=null;return{serviceCall:function(f){var e=$.Deferred();a.getGuestMode().always(function(g){if(g&&!f.allowCallInGuestMode){if(f.guestModeMethod!=null){console.log("Guest mode: calling "+f.guestModeMethod+" instead of "+f.method);f.method=f.guestModeMethod;NativeTransport.guestModeServiceCall(f).always(function(h,i){e.resolve(h,i)})}else{console.log("Rejecting attempt to make authenticated call for "+f.method+" while in guest mode.");e.reject({},constants.NativeCallResultCode.AUTHORIZATION_ERROR)}return}f.nativeCall=constants.NativeCallTypes.MAKE_SERVICE_CALL;f[constants.NativeCallKeys.AUTHENTICATE]=true;NativeTransport.callNative(f).always(function(h,i){e.resolve(h,i)})});return e.promise()},guestModeServiceCall:function(e){e.nativeCall=constants.NativeCallTypes.MAKE_SERVICE_CALL;e[constants.NativeCallKeys.AUTHENTICATE]=false;return this.callNative(e)},setFTUEHandler:function(e){d=e},setGCSettings:function(e){a=e},callNative:function(h){var g=c++;var i=h.target;var e=h.method;var m=h.args;var k=h.timeout;var f=h.defaultRet;var n=$.Deferred();b[g]=n;if(k>0){setTimeout(function(){delete b[g];n.reject({},constants.NativeCallResultCode.NETWORK_ERROR)},k)}var l={target:i,method:e,endPoint:h.endPoint,httpMethod:h.httpMethod,httpHeaders:h.httpHeaders,httpPayload:h.httpPayload,nativeCall:h.nativeCall,parameters:m||{}};l[constants.NativeCallKeys.AUTHENTICATE]=h[constants.NativeCallKeys.AUTHENTICATE];var j=nativehost.postMessage(l,g);return n.promise()},callNativeReply:function(h,g,f){if(g!=undefined){var e=b[g];if(e){delete b[g];e.resolve(h,f)}}else{console.log("NativeTransport: ERROR: callNativeReply called with undefined RID")}}}}());function receiveReply(a){if(a!=undefined){NativeTransport.callNativeReply(a.params,a.__requestId,a.resultCode)}else{console.log("NativeTransport: ERROR: Received undefined reply from native layer")}}console.log("NativeTransport loaded.");