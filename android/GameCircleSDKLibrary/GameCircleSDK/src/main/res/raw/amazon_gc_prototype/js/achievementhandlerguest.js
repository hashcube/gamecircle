/*! Copyright 2013 Amazon Digital Services, Inc. All rights reserved. */
AchievementHandlerGuest=(function(){var a=function(g,d){var f="AchievementRequest";var h=g;var e=d;this["getHandledType"]=function(){return f};this["handleRequest"]=function(r){var m=$.Deferred();if(!(r instanceof Request)){console.log("AchievementHandlerGuest: handleRequest: input was not of type Request");var l=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});m.resolve(l)}else{console.log("AchievementHandlerGuest: handleRequest: message is: "+JSON.stringify(r.getType()));var o=r.getType();var s=r.getParams();var p=s.action;var q={};switch(p){case"getAchievement":var n=s.cacheOnly;if(n){e.getCachedAchievement("SELF",s.achievementId).always(function(t,u){console.log("AchievementHandlerGuest: getAchievement promise: "+JSON.stringify(t));var v=u;var w=t;var t=new Result(v,w);m.resolve(t)})}else{h.getAchievement(s.achievementId).always(function(t,u){console.log("AchievementHandlerGuest: getAchievement promise: "+JSON.stringify(t));if(u!=constants.NativeCallResultCode.SUCCESS){console.log("AchievementHandlerGuest: getAchievement promise: SERVICE RESULT NOT OK");e.getCachedAchievement("SELF",s.achievementId).always(function(w,x){console.log("AchievementHandlerGuest: getAchievement promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);m.resolve(w)})}else{var v=t;e.getCachedAchievement("SELF",s.achievementId).always(function(x,y){if(y==constants.NativeCallResultCode.SUCCESS&&x!=null&&x.achievement!=null&&x.achievement.playerInfo!=null){v.achievement.playerInfo=x.achievement.playerInfo}else{v.achievement=k()}if(v.achievement.playerInfo.progress===100){v.achievement.achievementMeta["description"]=v.achievement.achievementMeta["unlockedDescription"]}else{v.achievement.achievementMeta["description"]=v.achievement.achievementMeta["lockedDescription"]}var z=i(v)?constants.NativeCallResultCode.SUCCESS:constants.NativeCallResultCode.ERROR;var A=v;var w=new Result(z,A);if(z==constants.NativeCallResultCode.SUCCESS){e.cacheAchievement("SELF",s.achievementId,A).always(function(B){console.log("UPDATED ACHIEVEMENT CACHE FOR: "+s.achievementId)})}m.resolve(w)})}})}break;case"getAchievements":var n=s.cacheOnly;if(n){e.getCachedAchievements("SELF").always(function(t,u){console.log("AchievementHandlerGuest: getAchievements promise: "+JSON.stringify(t));var v=u;var w=t;var t=new Result(v,w);m.resolve(t)})}else{h.getAchievements().always(function(t,u){console.log("AchievementHandlerGuest: getAchievements promise: "+JSON.stringify(t));if(u!=constants.NativeCallResultCode.SUCCESS){console.log("AchievementHandlerGuest: getAchievements promise: SERVICE RESULT NOT OK");e.getCachedAchievements("SELF").always(function(w,x){console.log("AchievementHandlerGuest: getAchievements promise: "+JSON.stringify(w));var y=x;var z=w;var w=new Result(y,z);m.resolve(w)})}else{console.log("AchievementHandlerGuest: getAchievements: service success");console.log("AchievementHandlerGuest: getAchievements: service success: result: "+JSON.stringify(t));var v=t;e.getCachedAchievements("SELF").always(function(x,y){console.log("AchievementHandlerGuest: getCachedAchievements promise: "+JSON.stringify(v));console.log("AchievementHandlerGuest: getAchievements: cache reconciliation");var A={};if(y==constants.NativeCallResultCode.SUCCESS&&x!=null&&x.achievements!=null&&x.achievements.achievements!=null){var z=x.achievements.achievements;$.each(z,function(F,E){if(E.playerInfo!=null){A[E.achievementMeta["id"]]=E.playerInfo}})}if(v!=null&&v.achievements!=null&&v.achievements.achievements!=null){var C=v.achievements.achievements;$.each(C,function(G,E){if(E!=null){var F=A[E.achievementMeta["id"]];if(F==null){E.playerInfo=c()}else{E.playerInfo=F}if(E.playerInfo.progress===100){E.achievementMeta["description"]=E.achievementMeta["unlockedDescription"]}else{E.achievementMeta["description"]=E.achievementMeta["lockedDescription"]}}})}console.log("AchievementHandlerGuest: getAchievements: cache reconciliation complete");var B=constants.NativeCallResultCode.SUCCESS;var D=v;D.serviceResult=true;var w=new Result(B,D);e.cacheAchievements("SELF",D).always(function(E){console.log("UPDATED ACHIEVEMENTS CACHE")});m.resolve(w)})}})}break;case"updateAchievement":e.getCachedAchievement("SELF",s.achievementId).always(function(t,u){var v=$.Deferred();if(u!=constants.NativeCallResultCode.SUCCESS){h.getAchievement(s.achievementId).always(function(w,x){if(x==constants.NativeCallResultCode.SUCCESS){w.achievement.playerInfo=c();e.cacheAchievement("SELF",s.achievementId,w).always(function(y){v.resolve(w,x)})}else{v.resolve(w,x)}})}else{v.resolve(t,u)}v.promise().always(function(y,z){var C=-1;if(z==constants.NativeCallResultCode.SUCCESS&&y&&y.achievement&&y.achievement["playerInfo"]&&y.achievement["playerInfo"]["progress"]){C=y.achievement["playerInfo"]["progress"]}var w=Math.min(s.achievementProgress,100);if(w>C){var E={};var x={};x.type="achievementEvent";x.achievementId=s.achievementId;x.progress=s.achievementProgress;x.eventTime=new Date().getTime();E.eventJson=x;NativeTransport.callNative({nativeCall:constants.NativeCallTypes.QUEUE_OFFLINE_EVENT,args:E});j(s.achievementId,s.achievementProgress);if(!y||!y.achievement||!y.achievement["playerInfo"]){var B={};var J=constants.NativeCallResultCode.SUCCESS;if(w<100){B.newlyUnlocked=false}else{B.newlyUnlocked=true}var K=new Result(J,B);m.resolve(K)}else{y.achievement["playerInfo"]["progress"]=w;if(w===100){y.achievement["playerInfo"]["unlocked"]=true;y.achievement["playerInfo"]["dateUnlocked"]=new Date().getTime();y.newlyUnlocked=true;if(y.achievement["achievementMeta"]["unlockedDescription"]){y.achievement["achievementMeta"]["description"]=y.achievement["achievementMeta"]["unlockedDescription"]}}else{y.newlyUnlocked=false;if(y.achievement["achievementMeta"]["lockedDescription"]){y.achievement["achievementMeta"]["description"]=y.achievement["achievementMeta"]["lockedDescription"]}}var J=constants.NativeCallResultCode.SUCCESS;var B=y;if(w<100){B.newlyUnlocked=false}else{B.newlyUnlocked=true}var K=new Result(J,B);e.updateCachedAchievementProgress("SELF",s.achievementId,w).always(function(L,M){console.log("UPDATED ACHIEVEMENTS CACHE")});console.log("AchievementHandlerGuest: updateAchievement updated and returning");if(w===100){if(B&&B.achievement&&B.achievement["achievementMeta"]){var H=K.getResultMap()["achievement"];var A=H.achievementMeta;var G=A.title;var I=A.description;var F=A.largeIconUrl;var D=A.pointValue;b().always(function(M){if(M){var L=ServiceFactory.getToastFactory().createKindleAchievementToastGuestRequest(G,I,F,D);hostinterface.showToast(JSON.stringify(L))}else{var L=ServiceFactory.getToastFactory().createAchievementToastGuestRequest(G,I,F,D);hostinterface.showToast(JSON.stringify(L))}})}}m.resolve(K)}}else{console.log("AchievementHandlerRecognized: updateAchievement: not new");var K={};K.newlyUnlocked=false;var B=K;var J=constants.NativeCallResultCode.SUCCESS;var K=new Result(J,B);m.resolve(K)}})});break;case"clearCache":e.clear().always(function(t,u){console.log("AchievementHandlerGuest: clearCache promise: "+JSON.stringify(t));var v=u;var w=t;var t=new Result(v,w);m.resolve(t)});break;default:console.log("AchievementHandlerGuest: handleRequest: actionCode not supported: "+p);var l=new Result(constants.NativeCallResultCode.REQUEST_ERROR,{});m.resolve(l)}}console.log("AchievementHandlerGuest: handleRequest: end of call");return m.promise()};var c=function(){return{progress:0,unlocked:false}};var k=function(){return{achievementMeta:{},playerInfo:c()}};function i(l){return(l!==undefined&&l!==null&&l.resultCodes!==undefined&&l.resultCodes!==null&&l.resultCodes.errorCode==="OK"&&l.resultCodes.resultCode==="OK")}var b=function(){var l=$.Deferred();ServiceFactory.getGCSettings().isKindle().always(function(m){l.resolve(m)});return l};function j(n,l){var m=new GameCircleEvent("PostAchievementInfo");m.addAttribute(constants.MetricConstants.MetricStringValueAttributesKeys_TARGET_ID,n);m.addAttribute(constants.MetricConstants.MetricStringValueAttributesKeys_STATUS,l);m.close()}};return a}());console.log("AchievementHandlerGuest loaded.");